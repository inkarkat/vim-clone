*clone.txt*             Create a duplicate clone of the current buffer.

			   CLONE    by Ingo Karkat
								   *clone.vim*
description			|clone-description|
usage				|clone-usage|
installation			|clone-installation|
configuration			|clone-configuration|
limitations			|clone-limitations|
known problems			|clone-known-problems|
todo				|clone-todo|
history				|clone-history|

==============================================================================
DESCRIPTION						   *clone-description*

Often, it is efficient to base a new file (e.g. unit test, meeting minutes) on
an existing one, and just apply the changes instead of re-creating the entire
file. In Vim, one can create a duplicate copy of the current buffer via
|:write| {newfile} or |:saveas| {newfile}. But the former doesn't
automatically open the cloned file, whereas with the latter, you're losing the
buffer containing the original file. Also, the identical clone is immediately
persisted, which may confuse automated build tools (or yourself, should you
get interrupted and forget to make the actual modifications). Transferring the
buffer contents via |:yank| is also cumbersome and clobbers a register.

This plugin offers a |:CloneAs| command that duplicates the current buffer (or
only parts of it) without persisting the clone right away (only on |:w|), and
keeping the original buffer loaded and unmodified inside Vim (with
|:SCloneAs|, it'll even be kept displayed in a window).

Oftentimes, duplication in source code is a code smell. Please use this plugin
responsibly ;-)

SEE ALSO								     *

The |cloneSimilar.vim| plugin (vimscript #4897) adds additional command
variants powered by the |EditSimilar.vim| (vimscript #2544) plugin.

==============================================================================
USAGE								 *clone-usage*
							*:CloneAs* *:SCloneAs*
:[range]CloneAs {file}	Duplicate and edit the current buffer / specified
			lines with a new name, keep the existing one.
:[range]SCloneAs {file}	Duplicate and split the current buffer / specified
			lines with a new name, keep the existing one.

			The original cursor position / window view will be
			kept, as well as the 'fileformat', 'fileencoding' and
			'filetype' settings of the original buffer.

==============================================================================
INSTALLATION						  *clone-installation*

This script is packaged as a |vimball|. If you have the "gunzip" decompressor
in your PATH, simply edit the *.vmb.gz package in Vim; otherwise, decompress
the archive first, e.g. using WinZip. Inside Vim, install by sourcing the
vimball or via the |:UseVimball| command. >
    vim clone*.vmb.gz
    :so %
To uninstall, use the |:RmVimball| command.

DEPENDENCIES						  *clone-dependencies*

- Requires Vim 7.0 or higher.
- Requires the |ingo-library.vim| plugin (vimscript #4433), version 1.019 or
  higher.

==============================================================================
CONFIGURATION						 *clone-configuration*

For a permanent configuration, put the following commands into your |vimrc|:
							   *g:clone_splitmode*
The |:SCloneAs| command uses the default 'splitbelow' behavior; you can
influence this via: >
    let g:clone_splitmode = 'belowright'
<
==============================================================================
LIMITATIONS						   *clone-limitations*

KNOWN PROBLEMS						*clone-known-problems*

TODO								  *clone-todo*

IDEAS								 *clone-ideas*

==============================================================================
HISTORY							       *clone-history*

1.02	19-Jun-2014
- Avoid setting 'filetype' when it already has the value of the original
  buffer, because even that triggers FileType autocmds, and may result in
  disturbing duplicate messages.
- Also handle unreadable files (and directories).
  *** You need to update to ingo-library (vimscript #4433) version 1.019! ***

1.01	25-Apr-2014
- Allow cloning into unloaded buffer.
- Suppress BufNewFile event, and instead emit the more appropriate BufRead
  event for the clone buffer.

1.00	18-Mar-2014
First published version.

0.01	11-Oct-2011
Started development.

==============================================================================
Copyright: (C) 2011-2014 Ingo Karkat
The VIM LICENSE applies to this plugin; see |copyright|.

Maintainer:	Ingo Karkat <ingo@karkat.de>
==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
